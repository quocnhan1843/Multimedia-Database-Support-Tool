/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package multidimensionaldata.tree.process;

import UI.Dictionary;
import com.csvreader.CsvWriter;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.filechooser.FileSystemView;
import javax.swing.table.DefaultTableModel;
import static multidimensionaldata.control.ControlTreePanel.tableQueue;

/**
 *
 * @author quocn
 */
public class ShowText extends javax.swing.JFrame {

    /**
     * Creates new form NewJFrame
     */
    
    private static ShowText instance = null;
    
    private static String text = "";
    private ShowText() {
        initComponents();
    }
    
    public static ShowText getInstace(){
        if(instance == null) instance = new ShowText();
        return instance;
    }
    
    public static void setInstace(){
       text = "";
    }
    
    public void addText(String st){
//        getInstace().setVisible(true);
        st += ".\n";
        text += st;
        textAreaDiplay.setText(text);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        textAreaDiplay = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setUndecorated(true);

        textAreaDiplay.setColumns(20);
        textAreaDiplay.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        textAreaDiplay.setRows(5);
        jScrollPane1.setViewportView(textAreaDiplay);

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/delete.png"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/save.png"))); // NOI18N
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 946, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 404, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        textAreaDiplay.setText("");
        text = "";
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        String text = textAreaDiplay.getText();
        try {
            saveText(text);
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(this, Dictionary.ERROR.ERROR.getString(),
                    "Lưu thất bái", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main() {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                getInstace().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea textAreaDiplay;
    // End of variables declaration//GEN-END:variables

    private static String pathSave = FileSystemView.getFileSystemView().getHomeDirectory().getPath();
    private void saveText(String text) throws IOException{
        String outputFile = readPathSave();
        
        if(!outputFile.equals("")){
            pathSave = outputFile;
        }else{
            return;
        }
        
	File file = new File(outputFile);	        
        boolean alreadyExists = file.exists();
        if (alreadyExists){
            int con = JOptionPane.showConfirmDialog(this
                    , Dictionary.CONFIRM.ALREADY_EXISTS.getString() + "\n"
                            + Dictionary.CONFIRM.REPLACE.getString()
                    , Dictionary.CONFIRM.CONFIRM.getString()
                    , JOptionPane.YES_NO_OPTION);
            if(con == JOptionPane.NO_OPTION){
                return;
            }else{
                file.delete();
            }
        }
        
        FileWriter fw = null;
        BufferedWriter bw = null;
        PrintWriter out = null;
        try {
            fw = new FileWriter(outputFile, true);
            bw = new BufferedWriter(fw);
            out = new PrintWriter(bw);
            int s = 0;
            for(int i=0; i<text.length(); i++){
                if(text.charAt(i) == '.'){
                    String sub = text.substring(s, i);
                    s = i+1;
                    out.println(sub);
                }
            }
            
            out.close();
        }
        finally {
            if(out != null)
                out.close();
            if(bw != null)
                    bw.close();
            if(fw != null)
                    fw.close();
        }
    }
    private String readPathSave(){
        JFileChooser chooser = new JFileChooser();
        FileNameExtensionFilter txtFile = new FileNameExtensionFilter("Text(.txt)", "txt");
        chooser.addChoosableFileFilter(txtFile);
        chooser.setAcceptAllFileFilterUsed(false);
        chooser.setCurrentDirectory(new File(pathSave));
        int retrival = chooser.showSaveDialog(null);
        if (retrival == JFileChooser.APPROVE_OPTION) {
            String path = chooser.getSelectedFile().getPath();
            if(path.substring(path.length() - 4).equals(".txt") == false) path += ".txt";
            return path;
        }
        return "";
    }
    private void writeFile(String text, String path){
        try {
            try(PrintWriter out = new PrintWriter( path )  ){
                out.println( text );
            }
        } catch (IOException e) {
               // e.printStackTrace();
        }
    }
}
